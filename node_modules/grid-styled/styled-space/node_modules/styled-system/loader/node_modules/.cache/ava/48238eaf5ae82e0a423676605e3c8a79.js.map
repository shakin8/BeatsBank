{"version":3,"sources":["test.js"],"names":["testFixture","fixture","options","compiler","entry","output","path","resolve","__dirname","filename","externals","module","rules","test","use","outputFileSystem","Promise","reject","run","err","stats","t","json","toJson","src","modules","source","snapshot"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,MAAMA,cAAc,CAACC,OAAD,EAAUC,UAAU,EAApB,KAA2B;AAC7C,QAAMC,WAAW,uBAAQ;AACvBC,WAAQ,KAAIH,OAAQ,EADG;AAEvBI,YAAQ;AACNC,YAAM,eAAKC,OAAL,CAAaC,SAAb,CADA;AAENC,gBAAU;AAFJ,KAFe;AAMvBC,eAAW;AACT,2BAAqB;AADZ,KANY;AASvBC,YAAQ;AACNC,aAAO,CACL;AACEC,cAAM,eADR;AAEEC,aAAK,eAAKP,OAAL,CAAaC,SAAb,EAAwB,IAAxB;AAFP,OADK;AADD;AATe,GAAR,CAAjB;;AAmBAL,WAASY,gBAAT,GAA4B,wBAA5B;;AAEA,SAAO,IAAIC,OAAJ,CAAY,CAACT,OAAD,EAAUU,MAAV,KAAqB;AACtCd,aAASe,GAAT,CAAa,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC3B,UAAID,GAAJ,EAASF,OAAOE,GAAP;;AAETZ,cAAQa,KAAR;AACD,KAJD;AAKD,GANM,CAAP;AAOD,CA7BD;;AA+BA,mBAAK,oBAAL,EAA2B,MAAMC,CAAN,IAAW;AACpC,QAAMD,QAAQ,MAAMpB,YAAY,cAAZ,CAApB;AACA,QAAMsB,OAAOF,MAAMG,MAAN,EAAb;AACA,QAAMC,MAAMF,KAAKG,OAAL,CAAa,CAAb,EAAgBC,MAA5B;AACAL,IAAEM,QAAF,CAAWH,GAAX;AACD,CALD","file":"test.js","sourcesContent":["import fs from 'fs'\nimport test from 'ava'\nimport path from 'path'\nimport webpack from 'webpack'\nimport memoryFs from 'memory-fs'\n\nconst testFixture = (fixture, options = {}) => {\n  const compiler = webpack({\n    entry: `./${fixture}`,\n    output: {\n      path: path.resolve(__dirname),\n      filename: 'bundle.js'\n    },\n    externals: {\n      'system-components': 'systemComponents'\n    },\n    module: {\n      rules: [\n        {\n          test: /fixture.json$/,\n          use: path.resolve(__dirname, './')\n        }\n      ]\n    }\n  })\n\n  compiler.outputFileSystem = new memoryFs()\n\n  return new Promise((resolve, reject) => {\n    compiler.run((err, stats) => {\n      if (err) reject(err)\n\n      resolve(stats)\n    })\n  })\n}\n\ntest('returns components', async t => {\n  const stats = await testFixture('fixture.json')\n  const json = stats.toJson()\n  const src = json.modules[0].source\n  t.snapshot(src)\n})\n"]}